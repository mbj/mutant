#!/usr/bin/env ruby
# frozen_string_literal: true

trap('INT') do |status|
  effective_status = status ? status + 128 : 128
  exit! effective_status
end

require 'mutant'

command = Mutant::CLI.parse(
  arguments: ARGV,
  world:     Mutant::WORLD
)

status =
  if command.zombie?
    $stderr.puts('Running mutant zombified!')
    Mutant::Zombifier.call(
      namespace:        :Zombie,
      load_path:        $LOAD_PATH,
      kernel:           Kernel,
      pathname:         Pathname,
      require_highjack: Mutant::RequireHighjack
        .public_method(:call)
        .to_proc
        .curry
        .call(Kernel),
      root_require:     'mutant',
      includes:         %w[
        adamantium
        anima
        concord
        equalizer
        mprelude
        mutant
        unparser
        variable
      ]
    )

    Zombie::Mutant::CLI.parse(
      arguments: ARGV,
      world:     Zombie::Mutant::WORLD
    ).call
  else
    command.call
  end

Kernel.exit(status)
